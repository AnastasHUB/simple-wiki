<%
  const depth = Number.isFinite(comment?.depth) ? comment.depth : 0;
  const commentId = comment?.snowflake_id || '';
  const parentId = comment?.parentId || null;
  const canReply = canComment && depth + 1 < maxCommentDepth;
  const authorName = comment?.author || 'Anonyme';
  const commentAuthorColor =
    comment?.authorRole && comment.authorRole.color ? comment.authorRole.color : null;
  const authorAttr = authorName.replace(/"/g, '&quot;').replace(/'/g, '&#39;');
  const authorClasses = ['comment-author', 'user-handle'];
  const commentAuthorStyle =
    commentAuthorColor && commentAuthorColor.hasColor ? commentAuthorColor.style : '';
  const avatarSource =
    (typeof comment?.authorAvatar === 'string' && comment.authorAvatar) ||
    (comment?.authorRole && comment.authorRole.avatarUrl ? comment.authorRole.avatarUrl : null);
  const trimmedName = authorName.trim();
  const avatarInitial = trimmedName ? trimmedName.charAt(0).toUpperCase() : '‚Ä¢';
  if (comment?.isAdminAuthor) {
    authorClasses.push('comment-author--admin');
  }
  if (commentAuthorColor && commentAuthorColor.hasColor) {
    authorClasses.push('role-colored-text');
    authorClasses.push(commentAuthorColor.className);
  }
  const canEditOwn = ownCommentTokens && commentId && ownCommentTokens[commentId];
  const attachments = Array.isArray(comment?.attachments) ? comment.attachments : [];
  const hasAttachments = attachments.length > 0;
%>
<li
  id="comment-<%= commentId %>"
  class="comment"
  data-comment-id="<%= commentId %>"
  data-comment-depth="<%= depth %>"
  data-parent-id="<%= parentId || '' %>"
  data-author-name="<%= authorAttr %>"
  style="--comment-depth: <%= depth %>"
>
  <div class="comment-header">
    <div class="comment-avatar">
      <% if (avatarSource) { %>
        <img src="<%= avatarSource %>" alt="" loading="lazy" />
      <% } else { %>
        <span class="comment-avatar-initial"><%= avatarInitial %></span>
      <% } %>
      <span class="sr-only">Avatar de <%= authorName %></span>
    </div>
    <div class="comment-meta">
      <span class="comment-author-header user-handle-decorated">
        <strong class="<%= authorClasses.join(' ') %>" style="<%= commentAuthorStyle %>">
          <%= authorName %>
          <% if (comment?.isAdminAuthor) { %>
            <span class="comment-author-badge" title="Administrateur">‚≠ê</span>
          <% } %>
        </strong>
        <%- include('userBadges', {
          badges: comment?.authorBadges,
          listClass: ['comment-author-badges', 'user-handle-badges'],
          itemClass: ['comment-author-badge-item', 'user-handle-badge-item'],
          iconClass: ['comment-author-badge-icon', 'user-handle-badge-icon'],
          srOnlyClass: 'sr-only',
          ariaLabel: "Badges de l'auteur",
        }) %>
        <% if (hasAttachments) { %>
          <span class="comment-attachment-flag" title="Ce commentaire contient des pi√®ces jointes">
            üìé<span class="sr-only">Pi√®ces jointes disponibles</span>
          </span>
        <% } %>
      </span>
      <span>¬∑ <%= new Date(comment.created_at).toLocaleString('fr-FR') %></span>
      <% if (comment?.ipProfile) { %>
        <span>
          ¬∑
          <a class="comment-ip-profile" href="/profiles/ip/<%= comment.ipProfile.hash %>">
            Profil IP #<%= comment.ipProfile.shortHash %>
          </a>
        </span>
      <% } %>
    </div>
  </div>
  <div class="comment-body"><%= comment.body %></div>
  <% if (hasAttachments) { %>
    <div class="comment-attachments" data-comment-attachments>
      <ul class="comment-attachment-list">
        <% attachments.forEach((attachment) => { %>
          <% const attachmentLabel =
            typeof attachment?.originalName === 'string' && attachment.originalName
              ? attachment.originalName
              : 'Pi√®ce jointe'; %>
          <% const attachmentUrl = typeof attachment?.url === 'string' ? attachment.url : ''; %>
          <% const rawSize = Number.isFinite(attachment?.size)
            ? Number(attachment.size)
            : Number.parseInt(attachment?.size, 10); %>
          <% const formattedSize = !Number.isNaN(rawSize) && rawSize > 0
            ? Math.max(1, Math.round(rawSize / 1024))
            : null; %>
          <li class="comment-attachment-item">
            <% if (attachment.isImage && attachmentUrl) { %>
              <a
                class="comment-attachment-link comment-attachment-link--image"
                href="<%= attachmentUrl %>"
                download="<%= attachmentLabel %>"
              >
                <img
                  class="comment-attachment-thumb"
                  src="<%= attachmentUrl %>"
                  alt="Aper√ßu de <%= attachmentLabel %>"
                  loading="lazy"
                />
                <span class="comment-attachment-label"><%= attachmentLabel %></span>
              </a>
            <% } else if (attachmentUrl) { %>
              <a
                class="comment-attachment-link"
                href="<%= attachmentUrl %>"
                download="<%= attachmentLabel %>"
              >
                <span class="comment-attachment-icon" aria-hidden="true">üìÑ</span>
                <span class="comment-attachment-label"><%= attachmentLabel %></span>
              </a>
            <% } else { %>
              <span class="comment-attachment-label"><%= attachmentLabel %></span>
            <% } %>
            <% if (formattedSize) { %>
              <span class="comment-attachment-size"><%= formattedSize %>&nbsp;Ko</span>
            <% } %>
          </li>
        <% }); %>
      </ul>
    </div>
  <% } %>
  <% if (canReply || canEditOwn) { %>
    <div class="comment-actions">
      <% if (canReply) { %>
        <button
          class="btn secondary comment-reply-button"
          type="button"
          data-reply-to="<%= commentId %>"
          data-reply-author="<%= authorAttr %>"
        >
          R√©pondre
        </button>
      <% } %>
      <% if (canEditOwn) { %>
        <a class="btn secondary" data-icon="‚úèÔ∏è" href="/wiki/<%= page.slug_id %>/comments/<%= commentId %>/edit">
          Modifier
        </a>
        <form
          method="post"
          action="/wiki/<%= page.slug_id %>/comments/<%= commentId %>/delete"
          onsubmit="return confirm('Supprimer ce commentaire ?');"
        >
          <%- include('csrf_field') %>
          <button class="btn danger" data-icon="üóëÔ∏è" type="submit">Supprimer</button>
        </form>
      <% } %>
    </div>
  <% } %>
  <% if (comment?.children && comment.children.length) { %>
    <ul class="comment-list comment-children">
      <% comment.children.forEach((child) => { %>
        <%- include('comment', {
          comment: child,
          page,
          canComment,
          ownCommentTokens,
          maxCommentDepth,
        }) %>
      <% }); %>
    </ul>
  <% } %>
</li>
