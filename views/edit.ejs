<% title = page ? t('edit.title.edit') : t('edit.title.new'); %>
<h1><%= title %></h1>
<% const isSubmission = typeof submissionMode !== 'undefined' ? submissionMode : false; %>
<% const rawFormState = formState && typeof formState === 'object' ? formState : {}; %>
<% const initialAuthor = typeof authorName !== 'undefined'
  ? authorName
  : (page && page.author ? page.author : ''); %>
<% const authorFieldValue = typeof rawFormState.author === 'string' ? rawFormState.author : initialAuthor; %>
<% const initialTitleValue = page ? page.title : ''; %>
<% const titleFieldValue = typeof rawFormState.title === 'string' ? rawFormState.title : initialTitleValue; %>
<% const initialContentValue = page ? page.content : ''; %>
<% const contentFieldValue = typeof rawFormState.content === 'string' ? rawFormState.content : initialContentValue; %>
<% const initialTagsValue = typeof tags === 'string' ? tags : ''; %>
<% const tagsFieldValue = typeof rawFormState.tags === 'string' ? rawFormState.tags : initialTagsValue; %>
<% const statusOptionsList = Array.isArray(statusOptions) ? statusOptions : []; %>
<% const showStatusControls = !!canChooseStatus; %>
<% const canSchedulePublication = !!canSchedule; %>
<% const publishAtFieldValue = typeof publishAtValue === 'string' ? publishAtValue : ''; %>
<% const scheduleSelected = statusOptionsList.some((opt) => opt && opt.value === 'scheduled' && opt.selected); %>
<% const errorMessages = Array.isArray(validationErrors) ? validationErrors : []; %>
<% if (isSubmission) { %>
  <div class="card card-highlight mb-md">
    <p class="mt-0 mb-0"><%= t('edit.submission.notice') %></p>
  </div>
<% } %>
<% if (errorMessages.length) { %>
  <div class="card card-error mb-md" role="alert">
    <ul class="mt-0 mb-0">
      <% errorMessages.forEach((message) => { %>
        <li><%= message %></li>
      <% }) %>
    </ul>
  </div>
<% } %>
<form method="post" data-page-editor-form data-can-schedule="<%= canSchedulePublication ? 'true' : 'false' %>">
  <%- include('partials/csrf_field') %>
  <label><%= t('edit.fields.title') %></label>
  <input type="text" name="title" value="<%= titleFieldValue %>" required />
  <label><%= t('edit.fields.content') %></label>
  <textarea name="content" id="contentField" rows="18" required hidden><%- contentFieldValue %></textarea>
  <div class="editor-mode-switch" data-editor-mode-switch>
    <button
      type="button"
      class="mode-toggle is-active"
      data-editor-mode="markdown"
      aria-pressed="true"
    >
      <%= t('edit.modes.markdown') %>
    </button>
    <button
      type="button"
      class="mode-toggle"
      data-editor-mode="visual"
      aria-pressed="false"
    >
      <%= t('edit.modes.visual') %>
    </button>
  </div>
  <div class="editor-shell" data-editor-shell>
    <div
      class="markdown-editor-shell"
      data-markdown-editor
      data-target="#contentField"
    >
    <div
      class="markdown-toolbar"
      role="toolbar"
      aria-label="<%= t('edit.toolbar.aria') %>"
    >
      <button type="button" class="toolbar-btn" data-md-action="heading-2" aria-label="<%= t('edit.toolbar.h2') %>" title="<%= t('edit.toolbar.h2') %>">H2</button>
      <button type="button" class="toolbar-btn" data-md-action="heading-3" aria-label="<%= t('edit.toolbar.h3') %>" title="<%= t('edit.toolbar.h3') %>">H3</button>
      <button type="button" class="toolbar-btn" data-md-action="bold" aria-label="<%= t('edit.toolbar.bold') %>" title="<%= t('edit.toolbar.bold') %>"><span aria-hidden="true">𝐆</span></button>
      <button type="button" class="toolbar-btn" data-md-action="italic" aria-label="<%= t('edit.toolbar.italic') %>" title="<%= t('edit.toolbar.italic') %>"><span aria-hidden="true"><em>I</em></span></button>
      <button type="button" class="toolbar-btn" data-md-action="highlight" aria-label="<%= t('edit.toolbar.highlight') %>" title="<%= t('edit.toolbar.highlight') %>"><span aria-hidden="true">🖍️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="strike" aria-label="<%= t('edit.toolbar.strike') %>" title="<%= t('edit.toolbar.strike') %>"><span aria-hidden="true">S̶</span></button>
      <button type="button" class="toolbar-btn" data-md-action="code" aria-label="<%= t('edit.toolbar.code') %>" title="<%= t('edit.toolbar.code') %>"><span aria-hidden="true">`</span></button>
      <button type="button" class="toolbar-btn" data-md-action="quote" aria-label="<%= t('edit.toolbar.quote') %>" title="<%= t('edit.toolbar.quote') %>"><span aria-hidden="true">❝</span></button>
      <button type="button" class="toolbar-btn" data-md-action="link" aria-label="<%= t('edit.toolbar.link') %>" title="<%= t('edit.toolbar.link') %>"><span aria-hidden="true">🔗</span></button>
      <button type="button" class="toolbar-btn" data-md-action="image" aria-label="<%= t('edit.toolbar.image') %>" title="<%= t('edit.toolbar.image') %>"><span aria-hidden="true">🖼️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="code-block" aria-label="<%= t('edit.toolbar.codeBlock') %>" title="<%= t('edit.toolbar.codeBlock') %>"><span aria-hidden="true">&lt;/&gt;</span></button>
      <button type="button" class="toolbar-btn" data-md-action="spoiler" aria-label="<%= t('edit.toolbar.spoiler') %>" title="<%= t('edit.toolbar.spoiler') %>"><span aria-hidden="true">🕵️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="details" aria-label="<%= t('edit.toolbar.details') %>" title="<%= t('edit.toolbar.details') %>"><span aria-hidden="true">📂</span></button>
      <button type="button" class="toolbar-btn" data-md-action="callout-info" aria-label="<%= t('edit.toolbar.calloutInfo') %>" title="<%= t('edit.toolbar.calloutInfo') %>"><span aria-hidden="true">ℹ️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="callout-warning" aria-label="<%= t('edit.toolbar.calloutWarning') %>" title="<%= t('edit.toolbar.calloutWarning') %>"><span aria-hidden="true">⚠️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="callout-success" aria-label="<%= t('edit.toolbar.calloutSuccess') %>" title="<%= t('edit.toolbar.calloutSuccess') %>"><span aria-hidden="true">✅</span></button>
      <button type="button" class="toolbar-btn" data-md-action="katex" aria-label="<%= t('edit.toolbar.math') %>" title="<%= t('edit.toolbar.math') %>"><span aria-hidden="true">∑</span></button>
      <button type="button" class="toolbar-btn" data-md-action="mermaid" aria-label="<%= t('edit.toolbar.mermaid') %>" title="<%= t('edit.toolbar.mermaid') %>"><span aria-hidden="true">🗺️</span></button>
      <button type="button" class="toolbar-btn" data-md-action="unordered-list" aria-label="<%= t('edit.toolbar.ul') %>" title="<%= t('edit.toolbar.ul') %>"><span aria-hidden="true">•</span></button>
      <button type="button" class="toolbar-btn" data-md-action="ordered-list" aria-label="<%= t('edit.toolbar.ol') %>" title="<%= t('edit.toolbar.ol') %>"><span aria-hidden="true">1.</span></button>
      <button type="button" class="toolbar-btn" data-md-action="task-list" aria-label="<%= t('edit.toolbar.task') %>" title="<%= t('edit.toolbar.task') %>"><span aria-hidden="true">☐</span></button>
      <button type="button" class="toolbar-btn" data-md-action="horizontal-rule" aria-label="<%= t('edit.toolbar.hr') %>" title="<%= t('edit.toolbar.hr') %>"><span aria-hidden="true">―</span></button>
      <button type="button" class="toolbar-btn" data-md-action="table" aria-label="<%= t('edit.toolbar.table') %>" title="<%= t('edit.toolbar.table') %>"><span aria-hidden="true">▦</span></button>
      <button
        type="button"
        class="toolbar-btn emoji-trigger"
        data-emoji-trigger
        aria-label="Insérer un emoji"
        title="Insérer un emoji"
      >😊</button>
      <div class="emoji-popover" data-emoji-picker hidden></div>
    </div>
    <div class="markdown-editor-body">
      <div class="markdown-editor-pane">
        <textarea
          class="markdown-input"
          rows="18"
          data-editor-input
          aria-label="<%= t('edit.aria.markdownEditor') %>"
        ></textarea>
        <div
          class="link-suggestions"
          data-link-suggestions
          hidden
          aria-label="<%= t('edit.aria.linkSuggestions') %>"
        ></div>
      </div>
      <div class="markdown-preview-pane">
        <div class="markdown-preview-heading"><%= t('edit.preview') %></div>
        <div class="markdown-preview" data-editor-preview aria-live="polite"></div>
      </div>
    </div>
    <div class="editor-status" data-editor-status role="status" aria-live="polite"></div>
    </div>
    <div class="visual-editor-shell" data-visual-editor hidden>
      <div class="visual-editor-header">
        <p><%= t('edit.visual.intro') %></p>
      </div>
      <div class="visual-editor-body" data-block-editor>
        <div class="visual-blocks" data-block-list aria-live="polite"></div>
        <div class="visual-empty" data-block-empty hidden>
          <p><%= t('edit.visual.empty') %></p>
        </div>
      </div>
      <div class="visual-editor-footer">
        <div class="block-add-menu" role="toolbar" aria-label="<%= t('edit.visual.add.aria') %>">
          <button type="button" class="block-add-btn" data-add-block="paragraph"><%= t('edit.visual.add.paragraph') %></button>
          <button type="button" class="block-add-btn" data-add-block="heading-1"><%= t('edit.visual.add.h1') %></button>
          <button type="button" class="block-add-btn" data-add-block="heading-2"><%= t('edit.visual.add.h2') %></button>
          <button type="button" class="block-add-btn" data-add-block="heading-3"><%= t('edit.visual.add.h3') %></button>
          <button type="button" class="block-add-btn" data-add-block="heading-4"><%= t('edit.visual.add.h4') %></button>
          <button type="button" class="block-add-btn" data-add-block="quote"><%= t('edit.visual.add.quote') %></button>
          <button type="button" class="block-add-btn" data-add-block="list"><%= t('edit.visual.add.list') %></button>
          <button type="button" class="block-add-btn" data-add-block="task-list"><%= t('edit.visual.add.task') %></button>
          <button type="button" class="block-add-btn" data-add-block="image"><%= t('edit.visual.add.image') %></button>
          <button type="button" class="block-add-btn" data-add-block="code"><%= t('edit.visual.add.code') %></button>
          <button type="button" class="block-add-btn" data-add-block="math"><%= t('edit.visual.add.math') %></button>
          <button type="button" class="block-add-btn" data-add-block="mermaid"><%= t('edit.visual.add.mermaid') %></button>
          <button type="button" class="block-add-btn" data-add-block="separator"><%= t('edit.visual.add.separator') %></button>
          <button type="button" class="block-add-btn" data-add-block="callout-info"><%= t('edit.visual.add.calloutInfo') %></button>
          <button type="button" class="block-add-btn" data-add-block="callout-warning"><%= t('edit.visual.add.calloutWarning') %></button>
          <button type="button" class="block-add-btn" data-add-block="callout-success"><%= t('edit.visual.add.calloutSuccess') %></button>
          <button type="button" class="block-add-btn" data-add-block="details"><%= t('edit.visual.add.details') %></button>
          <button type="button" class="block-add-btn" data-add-block="spoiler"><%= t('edit.visual.add.spoiler') %></button>
          <button type="button" class="block-add-btn" data-add-block="table"><%= t('edit.visual.add.table') %></button>
        </div>
      </div>
    </div>
  </div>
  <label for="author-field"><%= t('edit.fields.author.label') %></label>
  <input
    id="author-field"
    type="text"
    name="author"
    maxlength="80"
    value="<%= authorFieldValue %>"
    placeholder="<%= t('edit.fields.author.placeholder') %>"
  />
  <p class="editor-hint"><%= t('edit.fields.author.hint') %></p>
  <% if (showStatusControls) { %>
    <label for="status-field"><%= t('edit.status.label') %></label>
    <select id="status-field" name="status" data-status-field>
      <% statusOptionsList.forEach((option) => { %>
        <option value="<%= option.value %>" <%= option.selected ? 'selected' : '' %>>
          <%= option.label %>
        </option>
      <% }) %>
    </select>
    <p class="editor-hint"><%= t('edit.status.hint') %></p>
    <div
      class="schedule-controls"
      data-schedule-controls
      <%= scheduleSelected ? '' : 'hidden' %>
    >
      <label for="publish-at-field"><%= t('edit.schedule.label') %></label>
      <input
        id="publish-at-field"
        type="datetime-local"
        name="publish_at"
        value="<%= publishAtFieldValue %>"
        data-publish-at-field
        <%= canSchedulePublication ? '' : 'disabled' %>
      />
      <p class="editor-hint"><%= t('edit.schedule.help') %></p>
      <p class="form-error" data-schedule-error hidden></p>
    </div>
  <% } %>
  <% if (roleVisibility && roleVisibility.enabled) { %>
    <label for="page-visible-roles"><%= t('edit.visibility.rolesLabel') %></label>
    <select id="page-visible-roles" name="visible_roles" multiple size="6">
      <% roleVisibility.options.forEach(function(option) { %>
        <option value="<%= option.value %>" <%= option.selected ? 'selected' : '' %>>
          <%= option.label %>
        </option>
      <% }); %>
    </select>
    <% if (roleVisibility.hasSelection) { %>
      <p class="editor-hint"><%= t('edit.visibility.onlyBy') %> <strong><%= roleVisibility.selectedLabels.join(', ') %></strong>.</p>
    <% } else { %>
      <p class="editor-hint"><%= t('edit.visibility.emptyHint') %></p>
    <% } %>
  <% } %>
  <label><%= t('edit.fields.tags') %></label>
  <input type="text" name="tags" value="<%= tagsFieldValue %>" />
  <div class="actions">
    <% if (isSubmission) { %>
      <button class="btn success" data-icon="📨" type="submit"><%= t('edit.actions.submitProposal') %></button>
    <% } else { %>
      <button class="btn success" data-icon="💾" type="submit"><%= t('edit.actions.save') %></button>
    <% } %>
  </div>
</form>

<% if (showStatusControls) { %>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const form = document.querySelector("[data-page-editor-form]");
      if (!form) {
        return;
      }
      const statusField = form.querySelector("[data-status-field]");
      const scheduleBlock = form.querySelector("[data-schedule-controls]");
      const publishInput = form.querySelector("[data-publish-at-field]");
      const errorBox = form.querySelector("[data-schedule-error]");
      const canSchedule = form.dataset.canSchedule === "true";

      function clearScheduleError() {
        if (errorBox) {
          errorBox.textContent = "";
          errorBox.hidden = true;
        }
      }

      function showScheduleError(message) {
        if (!errorBox) {
          return;
        }
        errorBox.textContent = message;
        errorBox.hidden = false;
      }

      function updateScheduleVisibility() {
        if (!scheduleBlock || !statusField) {
          return;
        }
        const shouldShow = statusField.value === "scheduled";
        scheduleBlock.hidden = !shouldShow;
        if (!shouldShow) {
          clearScheduleError();
        }
      }

      if (statusField) {
        statusField.addEventListener("change", updateScheduleVisibility);
        updateScheduleVisibility();
      }

      form.addEventListener("submit", (event) => {
        if (!statusField || statusField.value !== "scheduled") {
          return;
        }
        if (!canSchedule) {
          event.preventDefault();
          showScheduleError("<%= t('edit.schedule.noPermission') %>");
          return;
        }
        const rawValue = publishInput ? publishInput.value.trim() : "";
        if (!rawValue) {
          event.preventDefault();
          showScheduleError("<%= t('edit.schedule.required') %>");
          return;
        }
        const parsed = new Date(rawValue);
        if (Number.isNaN(parsed.getTime())) {
          event.preventDefault();
          showScheduleError("<%= t('edit.schedule.invalid') %>");
          return;
        }
        if (parsed.getTime() <= Date.now()) {
          event.preventDefault();
          showScheduleError("<%= t('edit.schedule.future') %>");
          return;
        }
        clearScheduleError();
      });
    });
  </script>
<% } %>
