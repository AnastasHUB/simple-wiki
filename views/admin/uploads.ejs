<% title='Images'; %>
<h1>Gestion des images</h1>
<div class="card" style="margin-bottom:16px">
  <h2>Ajouter une image</h2>
  <p style="margin-top:8px">
    Chaque image re√ßoit un identifiant unique (UUID). Les fichiers volumineux sont automatiquement redimensionn√©s et optimis√©s.
    Vous pouvez d√©finir un nom personnalis√© sans changer l‚ÄôUUID. Laissez le champ vide pour effacer le nom personnalis√©.
  </p>
  <form id="uploadForm" action="/admin/uploads" method="post" enctype="multipart/form-data" style="display:flex; flex-wrap:wrap; gap:12px; margin-top:12px">
    <div style="flex:1 1 220px">
      <input type="file" id="imageInput" name="image" accept="image/*" required aria-label="Image" />
    </div>
    <div style="flex:1 1 220px">
      <input type="text" id="displayNameInput" name="displayName" placeholder="Nom personnalis√© (optionnel)" maxlength="120" aria-label="Nom personnalis√© (optionnel)" />
    </div>
    <div style="align-self:flex-end">
      <button class="btn success" data-icon="üöÄ" type="submit">Uploader</button>
    </div>
  </form>
  <div id="uploadMessage" style="margin-top:12px"></div>
</div>

<% if (uploads.length) { %>
  <div class="table-wrap">
    <table class="data-table" id="uploadsTable">
      <thead>
        <tr>
          <th>Aper√ßu</th>
          <th>D√©tails</th>
          <th>Nom personnalis√©</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% uploads.forEach(upload => { %>
          <% const displayName = upload.displayName || ''; %>
          <% const createdAt = upload.createdAt ? new Date(upload.createdAt).toLocaleString('fr-FR') : '‚Äî'; %>
          <% const sizeLabel = upload.size ? Math.max(1, Math.round(upload.size / 1024)) + ' Ko' : '‚Äî'; %>
          <tr>
            <td>
              <img src="<%= upload.url %>" alt="" style="max-width:140px; max-height:90px; object-fit:contain; border-radius:8px" />
            </td>
          <td style="line-height:1.4">
            <div><strong>UUID :</strong> <code><%= upload.id %></code></div>
            <div><strong>Nom original :</strong> <%= upload.originalName %></div>
            <div><strong>Nom affich√© :</strong> <%= displayName || '‚Äî' %></div>
            <div><strong>Taille :</strong> <%= sizeLabel %></div>
            <div><strong>Ajout√© :</strong> <%= createdAt %></div>
          </td>
          <td>
            <form method="post" action="/admin/uploads/<%= upload.id %>/name" style="display:flex; flex-direction:column; gap:8px; min-width:220px">
              <input type="text" name="displayName" value="<%= displayName %>" maxlength="120" placeholder="Nom personnalis√©" />
              <button class="btn success" data-icon="üíæ" type="submit">Enregistrer</button>
            </form>
          </td>
          <td>
            <% const altText = displayName || upload.originalName || ''; %>
            <div class="upload-actions" data-url="<%= upload.url %>" data-alt="<%= altText %>" style="display:flex; flex-direction:column; gap:8px">
              <button class="btn copy-upload" data-icon="üìã" type="button">Copier le code</button>
              <form method="post" action="/admin/uploads/<%= upload.id %>/delete" onsubmit="return confirm('Supprimer cette image ?')">
                <button class="btn unlike" data-icon="üóëÔ∏è" type="submit">Supprimer</button>
              </form>
            </div>
          </td>
        </tr>
      <% }) %>
      </tbody>
    </table>
  </div>
  <div class="table-footer" style="display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:0.75rem; margin-top:1rem;">
    <form method="get" style="display:flex; align-items:center; gap:0.5rem;">
      <label for="uploads-per-page" style="white-space:nowrap;">√âl√©ments par page</label>
      <select id="uploads-per-page" name="perPage" onchange="this.form.submit()">
        <% pagination.perPageOptions.forEach(option => { %>
          <option value="<%= option %>" <%= option === pagination.perPage ? 'selected' : '' %>><%= option %></option>
        <% }) %>
      </select>
      <input type="hidden" name="page" value="1">
    </form>
    <span>Page <%= pagination.page %> sur <%= pagination.totalPages %></span>
    <div style="display:flex; gap:0.5rem;">
      <% if (pagination.hasPrevious) { %>
        <a class="btn" data-icon="‚¨ÖÔ∏è" href="?page=<%= pagination.previousPage %>&perPage=<%= pagination.perPage %>">Pr√©c√©dent</a>
      <% } else { %>
        <span class="btn" data-icon="‚¨ÖÔ∏è" aria-disabled="true" style="pointer-events:none; opacity:0.5;">Pr√©c√©dent</span>
      <% } %>
      <% if (pagination.hasNext) { %>
        <a class="btn" data-icon="‚û°Ô∏è" href="?page=<%= pagination.nextPage %>&perPage=<%= pagination.perPage %>">Suivant</a>
      <% } else { %>
        <span class="btn" data-icon="‚û°Ô∏è" aria-disabled="true" style="pointer-events:none; opacity:0.5;">Suivant</span>
      <% } %>
    </div>
  </div>
<% } else { %>
  <p class="card" style="color:var(--muted)">Aucune image disponible pour le moment.</p>
<% } %>

<script>
  const uploadForm = document.getElementById('uploadForm');
  const uploadMessage = document.getElementById('uploadMessage');
  const uploadsTable = document.getElementById('uploadsTable');
  const uploadActionsSelector = '.upload-actions';

  function buildSnippet(url, alt) {
    const img = document.createElement('img');
    img.src = url || '';
    if (alt) img.alt = alt;
    img.loading = 'lazy';
    img.decoding = 'async';
    return img.outerHTML;
  }

  function prepareCopyActions(container) {
    if (!container) return;
    const url = container.dataset.url || '';
    const alt = container.dataset.alt || '';
    const snippet = buildSnippet(url, alt);
    const button = container.querySelector('.copy-upload');
    if (button) button.dataset.snippet = snippet;
  }

  function escapeHtml(value) {
    return (value ?? '').toString().replace(/[&<>"']/g, (char) => {
      switch (char) {
        case '&': return '&amp;';
        case '<': return '&lt;';
        case '>': return '&gt;';
        case '"': return '&quot;';
        case "'": return '&#39;';
        default: return char;
      }
    });
  }

  function setMessage(text, type = 'info') {
    uploadMessage.innerHTML = '';
    if (!text) return;
    const box = document.createElement('div');
    box.textContent = text;
    box.style.padding = '8px 12px';
    box.style.borderRadius = '6px';
    if (type === 'error') {
      box.style.backgroundColor = '#ffe5e5';
      box.style.color = '#a60000';
    } else if (type === 'success') {
      box.style.backgroundColor = '#e6ffed';
      box.style.color = '#065f46';
    } else {
      box.style.backgroundColor = '#e5f6ff';
      box.style.color = '#005a8c';
    }
    uploadMessage.appendChild(box);
  }

  function prependUploadRow(data) {
    if (!uploadsTable) {
      window.location.reload();
      return;
    }
    const tbody = uploadsTable.querySelector('tbody');
    if (!tbody) {
      window.location.reload();
      return;
    }

    const tr = document.createElement('tr');
    const displayName = data.displayName || '';
    const originalName = data.originalName || data.name || '';
    const safeUrl = escapeHtml(data.url);
    const safeId = escapeHtml(data.id);
    tr.innerHTML = `
      <td>
        <img src="${safeUrl}" alt="" style="max-width:140px; max-height:90px; object-fit:contain; border-radius:8px" />
      </td>
      <td style="line-height:1.4">
        <div><strong>UUID :</strong> <code>${safeId}</code></div>
        <div><strong>Nom original :</strong> ${escapeHtml(originalName)}</div>
        <div><strong>Nom affich√© :</strong> ${displayName ? escapeHtml(displayName) : '‚Äî'}</div>
        <div><strong>Taille :</strong> ${Math.max(1, Math.round((data.size || 0) / 1024))} Ko</div>
        <div><strong>Ajout√© :</strong> ${new Date().toLocaleString('fr-FR')}</div>
      </td>
      <td>
        <form method="post" action="/admin/uploads/${safeId}/name" style="display:flex; flex-direction:column; gap:8px; min-width:220px">
          <input type="text" name="displayName" value="${escapeHtml(displayName)}" maxlength="120" placeholder="Nom personnalis√©" />
          <button class="btn success" data-icon="üíæ" type="submit">Enregistrer</button>
        </form>
      </td>
      <td>
        <div class="upload-actions" data-url="${safeUrl}" data-alt="${escapeHtml(displayName || originalName || '')}" style="display:flex; flex-direction:column; gap:8px">
          <button class="btn copy-upload" data-icon="üìã" type="button">Copier le code</button>
          <form method="post" action="/admin/uploads/${safeId}/delete" onsubmit="return confirm('Supprimer cette image ?')">
            <button class="btn unlike" data-icon="üóëÔ∏è" type="submit">Supprimer</button>
          </form>
        </div>
      </td>
    `;
    tbody.prepend(tr);
    prepareCopyActions(tr.querySelector(uploadActionsSelector));
  }

  document.querySelectorAll(uploadActionsSelector).forEach(prepareCopyActions);

  document.addEventListener('click', (event) => {
    const button = event.target.closest('.copy-upload');
    if (!button) return;
    const snippet = button.dataset.snippet || '';
    if (!snippet) return;
    navigator.clipboard.writeText(snippet).then(() => {
      const originalText = button.textContent;
      button.textContent = 'Copi√© !';
      setTimeout(() => { button.textContent = originalText || 'Copier le code'; }, 1500);
    });
  });

  if (uploadForm) {
    uploadForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      if (!uploadForm.image.files.length) {
        setMessage('Choisissez un fichier avant d\'envoyer.', 'error');
        return;
      }
      const button = uploadForm.querySelector('button[type="submit"]');
      button.disabled = true;
      setMessage('Optimisation et upload en cours‚Ä¶');
      try {
        const formData = new FormData(uploadForm);
        const dn = formData.get('displayName');
        if (dn) formData.set('displayName', dn.toString().trim());
        const response = await fetch(uploadForm.action, { method: 'POST', body: formData });
        const payload = await response.json();
        if (!payload.ok) throw new Error(payload.message || 'Erreur lors de l\'upload');
        setMessage('Image envoy√©e avec succ√®s.', 'success');
        prependUploadRow(payload);
        uploadForm.reset();
      } catch (err) {
        setMessage(err.message || 'Erreur lors de l\'upload', 'error');
      } finally {
        const btn = uploadForm.querySelector('button[type="submit"]');
        if (btn) btn.disabled = false;
      }
    });
  }
</script>
